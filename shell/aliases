#!/usr/bin/env sh

# File:     aliases
# Created:  30.12.2019
# Author:   Artyom Danilov (@defytheflow)

alias ci='composer install'

# attempts to discover a raspberry pi's ip address on the local network.
alias find_raspberry_ip="arp -a | grep -E --ignore-case 'b8:27:eb|dc:a6:32'"

# curls
alias my_ip='curl -s http://ipecho.net/plain; echo'
alias weather='curl -s http://wttr.in'

# prisma
alias push='npx prisma db push'
alias seed='npx prisma db seed'
alias studio='npx prisma studio'

alias msh='mongosh'
alias rh='runhaskell'

alias sudo='sudo ' # to run 'sudo {alias}'
# this alias creates a bad muscle memory, which is non-portable to other shells or environments
# that don't have this alias
# alias q='exit 0'   # without 0, it exits with status code 1, and makes vscode show an error alert.
alias x='exit'

alias so='source'
alias grep='grep --color=auto'
alias ssh='TERM=xterm-color ssh' # fix 'tput: unknown terminal bug'

case $OSTYPE in
  linux*)
    alias open='xdg-open'
    ;;
esac

# cd.
alias ..='cd ..'
alias cd..='cd ..'
alias ...='cd ../../'
alias ....=' cd ../../../'
alias .....='cd ../../../../'
alias -- -='cd -' # type '-' to go to previous dir.

# ls.
case $OSTYPE in
  darwin*)
    alias ls='ls -hF --color=auto'
    ;;
  linux*)
    alias ls='ls -vhF --color=auto'
    ;;
esac
alias sl='ls'
alias ll="ls -lha --color"
# alias l='ls -1'
# alias la='ls -a'
# alias ll='ls -l'

# exa.
if command -v exa >/dev/null; then
  # don't use --icons, because exa's folder icons are too close to the folder name,
  alias tree='exa -T --git-ignore -I ".git|__pycache__|node_modules"'
  alias t='tree'
  alias ta='tree -a'
  alias ls='exa --git --header -F'
fi

# files.
# alias cp='cp -i'
# alias du='du -h'
# alias mv='mv -i'
# alias tc='touch'

case $OSTYPE in
  darwin*)
    # alias rm='rm -vi'
    ;;
  linux*)
    alias rm='rm -vi --preserve-root'
    alias rmdir='rmdir -v'
    ;;
esac

# rmtrash.
# if command -v rmtrash >/dev/null; then
#   alias rm='rmtrash'
#   alias rmdir='rmdirtrash'
# fi

# sqlite3.
# if command -v sqlite3 >/dev/null; then
#   alias sql='sqlite3'
#   alias sqlite='sqlite3'
# fi

# gdb.
if command -v gdb >/dev/null; then
  alias gdb='gdb --quiet'
# else
#   alias gdb='lldb'
fi

# java.
if command -v java >/dev/null; then
  alias j='java'
  alias jc='javac'
fi

# tmux.
alias tx='tmux'
if command -v tmuxinator >/dev/null; then
  alias mux='tmuxinator'
fi

# ranger.
if command -v ranger >/dev/null; then
  alias rn='ranger'
fi

# docker.
if command -v docker >/dev/null; then
  alias d='docker'
  alias da='docker attach'
  alias dr='docker restart'
  alias dc='docker compose'
  alias dcu='docker compose up'
  alias dcd='docker compose down'

  # docker remove.
  drm() {
    for image in $(docker image ls | grep none | awk '{ print $3 }'); do
      docker image rm "${image}" -f
    done
  }
fi

# vscode.
if command -v code >/dev/null; then
  alias c='code'
  alias c.='code .'
fi

# vim.
alias via='vim ${DOTFILES_HOME}/shell/aliases'   # vi aliases
alias vif='vim ${DOTFILES_HOME}/shell/functions' # vi functions
alias vil="vim -c':e#<1'"                        # vi last
alias vin='vim -u NONE'                          # vi none
alias vis='vim ${ZDOTDIR}/.zshrc'                # vi shell
alias vit='vim ${HOME}/.config/tmux/tmux.conf'   # vi tmux.conf

if command -v nvim >/dev/null; then
  alias vi='nvim'
  alias vim='nvim'
  alias vie='nvim ${HOME}/.config/nvim/init.lua' # vi edit (nvim config file)
fi

# python.
alias p='python3'
alias py='python3'
alias python='python3'

if command -v ipython3 >/dev/null; then
  alias ipy='ipython3'
  alias ipython='ipython3'
fi

if command -v bpython >/dev/null; then
  alias bpy='bpython'
fi

if command -v ptpython >/dev/null; then
  alias ppy='ptpython'
fi

# homebrew.
if command -v brew >/dev/null; then
  alias bi='brew install'
  alias bs='brew services'
  alias bl='brew list'
fi

# pipenv.
if command -v pipenv >/dev/null; then
  alias pi='pipenv install'
  alias pid='pipenv install --dev'
  alias pu='pipenv uninstall'
  alias psh='pipenv shell'
  alias pt='pytest'
  alias pr='pipenv run'
  alias prd='pipenv run dev'
  alias prf='pipenv run format'
  alias prl='pipenv run lint'
  alias prs='pipenv run start'
  alias prt='pipenv run test'
  alias prtc='pipenv run test --cov=src --cov-report=html'
  alias prtv='pipenv run test --verbose'
  alias prtw='pipenv run ptw'
fi

# npm/yarn/pnpm/bun.
if command -v ni >/dev/null; then
  alias nid='ni -D'
  alias nrd='nr dev'
  alias nrf='nr format'
  alias nrl='nr lint'
  alias nrb='nr build'
  alias nrs='nr start'
  alias nrm='nr make'
  alias nrt='nr typecheck'
  alias nt='nr test'
  alias nte='nr test:e2e'
  alias nrc='nr check'
  # alias nrtc='nr test -- --coverage --coverageDirectory=coverage'
  # alias nrtv='nr test -- --verbose'
  # alias nrtw='nr test -- --watchAll=true'
fi

# django.
alias dj='django-admin'
alias djch='dj check'
# alias djdb='dj dbshell'
alias djdb='pgcli $(dj sqldsn --quiet --style=uri)'
alias djdm='dj dumpdata'
alias djf='dj flush'
alias djld='dj loaddata'
alias djm='dj migrate'
alias djmm='dj makemigrations'
alias djr='dj runserver'
alias djsa='dj startapp'
alias djsh='dj shell_plus --quiet-load --print-sql --ipython'
# alias djsh='dj shell_plus --quiet-load'
alias djsm='dj showmigrations'
alias djsp='dj startproject'
alias djsql='dj sqlmigrate'
alias djsu='dj createsuperuser'
alias djt='dj test --keepdb --pdb --failfast --noinput -v2'

# opam.
if command -v opam >/dev/null; then
  alias oi='opam install'
fi

# coverage.
if command -v coverage >/dev/null; then
  alias cvrn='coverage run'
  alias cvrp='coverage report | less'
  alias cvht='coverage html'
fi

# httpie.
if command -v http >/dev/null; then
  alias http='http --style=auto --unsorted'
fi

# systemd.
case $OSTYPE in
  linux*)
    alias sc='systemctl'
    alias scdr='systemctl daemon-reload'
    alias scr='systemctl restart'
    alias scs='systemctl start'
    alias sce='systemctl stop'
    ;;
esac

# git.
alias g='git'

# git-add.
alias ga='git add'
alias gaa='git add --all'
alias gap='git add --patch'

# git-branch.
alias gb='git branch'
alias gba='git branch -a' # --all
alias gbd='git branch -d' # --delete
alias gbm='git branch -m' # --move
alias gbv='git branch -v' # --verbose

# git-commit.
alias gc='git commit'
alias gcnv='git commit --no-verify'
alias gca='git commit --amend'
alias gcanv='git commit --amend --no-verify'
alias gcane='git commit --amend --no-edit'
alias gcanvne='git commit --amend --no-verify --no-edit'
alias gcanenv='git commit --amend --no-edit --no-verify'
alias gcm='git commit -m' # -- message
alias gcam='git commit -am' # --all --message
# alias gcaann='git commit -a --amend --no-edit --no-verify'
# alias gcaa='git commit -a --amend --no-edit'

# git-checkout.
alias gcb='git checkout -b'
alias gco='git checkout'
alias gco.='git checkout -- .'

# git-cherry-pick
alias gcp='git cherry-pick'

# git-clone.
alias gcl='git clone'

# git-clean.
alias gclean='git clean -d --force'

# git-diff.
alias gd='git diff'
alias gdn='git diff --numstat'
alias gds='git diff --staged'
alias gdt='git difftool'

gdv() {
  git diff --ignore-all-space "$@" | vim -R -
}

# git-fetch
alias gfa='git fetch --all'

# git-init.
alias gi='git init'

# git-log.
alias gl='git log --abbrev-commit'
alias gla='git log'
alias glr='git log --reverse'
alias gls='git log --stat'
alias glg='git log --grep'
alias glo='git log --oneline'
alias glog='git log --oneline --graph'
alias gloa='git log --oneline --all'
alias gloag='git log --oneline --all --graph'
# alias glog='git log --pretty="%C(yellow)%cd %C(cyan)%h%C(auto)%d %Creset%s (%Cblue%aN%Creset)" --graph --date=short --date-order'
# the same as glo, but logs author's email instead of name.
# alias gloe='git log --pretty="%C(yellow)%cd %C(cyan)%h%C(auto)%d %Creset%s (%Cblue%aE%Creset)" --graph --date=short --date-order'
# the same as glo, but logs author's name and email.
# alias gloa='git log --pretty="%C(yellow)%cd %C(cyan)%h%C(auto)%d %Creset%s (%Cblue%aN %Creset- %Cblue%aE%Creset)" --graph --date=short --date-order'
alias gwc='git whatchanged'
alias gln='git log HEAD@{1}..HEAD@{0}' # show commits since last pull (new commits).
alias glp='git log -p'
# alias glg='git log --graph'

# git-merge.
alias gm='git merge'

# git-mv.
alias gmv='git mv'

# git-push.
alias gp='git push'
alias gpd='git push --delete'
alias gpnv='git push --no-verify'
alias gpf='git push --force-with-lease'
alias gpfnv='git push --force-with-lease --no-verify'
alias gpu='git push --set-upstream'

# `git push all` - push to all remotes.
gpa() {
  for remote in $(git remote -v | grep push | awk '{ print $1 }'); do
    git push "$remote" "$@"
  done
}

# `git push all --force`
gpaf() {
  gpa --force
}

# git-pull.
alias gpl='git pull'

# git-remote.
alias grv='git remote -v'
alias gra='git remote add'

# git-rm.
alias grm='git rm'

# git-rebase.
alias grb='git rebase'
alias grbi='git rebase --interactive'
alias grbc='git rebase --continue'

# git-reset.
alias grs='git reset'
alias grsl='git reset HEAD~1'

# git-restore
alias gro='git restore'

# git-status.
alias gs='git status'
alias gss='git status --short'

# git-shortlog.
alias gsl='git shortlog --summary --email'
alias gcount='git rev-list --count HEAD' #?

# git-show.
alias gsh='git show'

# git-stash.
alias gst='git stash'
alias gstb='bit stash branch'
alias gstd='git stash drop'
alias gstl='git stash list'
alias gstp='git stash pop'
alias gstsh='git stash show'
alias gstshp='git stash show -p'

# git-switch
alias gsw='git switch'

# gh (github command line client).
if command -v gh >/dev/null; then
  alias ghb='gh browse'
  alias ghrc='gh repo create'
  alias ghrl='gh repo list --limit 100'
  alias ghrlf='gh repo list --limit 100 --fork'
  alias ghrlp='gh repo list --limit 100 --private'
fi

if command -v ghcal >/dev/null; then
  alias ghst='ghcal -u defytheflow -e $(date "+%Y.%m.%d")'
fi

# task
if command -v task >/dev/null; then
  alias ta='task add'
  alias td='task done'
  alias tl='task list'
  alias tm='task modify'
  alias tn='task next'
fi

# amixer.
# alias amixer_toggle='amixer -D pulse set Master 1+ toggle'

# config.
# alias wget='wget --hsts-file=${XDG_CACHE_HOME}/wget-hsts'

# alias xrld='source ~/.xprofile'
